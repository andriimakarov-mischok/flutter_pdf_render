group 'jp.espresso3389.pdf_render'
version '1.0-SNAPSHOT'

buildscript {
    ext.kotlin_version = '1.9.25'

    repositories {
        google()
        mavenCentral()
    }

    dependencies {
        classpath 'com.android.tools.build:gradle:8.13.0'
        classpath "org.jetbrains.kotlin:kotlin-gradle-plugin:$kotlin_version"
    }
}

rootProject.allprojects {
    repositories {
        google()
        mavenCentral()
    }
}

apply plugin: 'com.android.library'
apply plugin: 'kotlin-android'

android {
    if (project.android.hasProperty("namespace")) {
        namespace("jp.espresso3389.pdf_render")
    }
    
    compileSdkVersion 34

    defaultConfig {
        minSdkVersion 21
        targetSdkVersion 34

        ndk {
            abiFilters "armeabi-v7a", "arm64-v8a", "x86", "x86_64"
        }

        externalNativeBuild {
            cmake {
                arguments "-DANDROID_STL=c++_shared"
                cppFlags "-std=c++17 -O2"
            }
        }
    }

    buildTypes {
        release {
            minifyEnabled false
            jniDebuggable false
        }
        debug {
            jniDebuggable true
        }
    }

    compileOptions {
        sourceCompatibility JavaVersion.VERSION_17
        targetCompatibility JavaVersion.VERSION_17
    }

    kotlinOptions {
        jvmTarget = "17"
    }

    sourceSets {
        main.java.srcDirs += 'src/main/kotlin'
    }

    lintOptions {
        disable 'InvalidPackage'
    }
}


// Determine OS and set appropriate build script
def isWindows = System.getProperty('os.name').toLowerCase().contains('windows')
def buildScriptName = isWindows ? 'build_libs.bat' : 'build_libs.sh'
def buildScriptPath = "$projectDir/$buildScriptName"

// Task to build native libraries with automatic script detection
task buildNativeLibs(type: Exec) {
    description = 'Builds native .so libraries with 16KB page alignment'
    group = 'build'

    workingDir projectDir

    if (isWindows) {
        commandLine 'cmd', '/c', buildScriptName
    } else {
        // Make script executable on Unix systems
        doFirst {
            file(buildScriptPath).setExecutable(true)
        }
        commandLine 'bash', buildScriptName
    }
}

// Task to verify 16KB alignment after build
task verifyPageAlignment(type: Exec) {
    description = 'Verifies 16KB page alignment in built .so files'
    group = 'verification'
    dependsOn buildNativeLibs

    workingDir projectDir

    if (isWindows) {
        commandLine 'cmd', '/c', 'verify_alignment.bat'
    } else {
        doFirst {
            file("$projectDir/verify_alignment.sh").setExecutable(true)
        }
        commandLine 'bash', 'verify_alignment.sh'
    }

    // Only verify if script exists
    onlyIf {
        def verifyScript = isWindows ?
                file("$projectDir/verify_alignment.bat") :
                file("$projectDir/verify_alignment.sh")
        verifyScript.exists()
    }
}

// Make sure .so files are built before compiling Kotlin/Java
preBuild.dependsOn(buildNativeLibs)

// Optionally run verification after build (can be disabled if needed)
preBuild.finalizedBy(verifyPageAlignment)

dependencies {
    implementation "org.jetbrains.kotlin:kotlin-stdlib-jdk7:$kotlin_version"
}
